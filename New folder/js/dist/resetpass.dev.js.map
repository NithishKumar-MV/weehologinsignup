{"version":3,"sources":["resetpass.js"],"names":["resetPassword","email","document","getElementById","value","currentPassword","newPassword","confirmPassword","validateEmail","alert","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","error","console","emailRegex","test"],"mappings":";;AAAA,SAASA,aAAT,GAAyB;AACrB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAA/C;AACA,MAAMC,eAAe,GAAGH,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAAnE;AACA,MAAME,WAAW,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAA3D;AACA,MAAMG,eAAe,GAAGL,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAAnE,CAJqB,CAMrB;;AACA,MAAI,CAACI,aAAa,CAACP,KAAD,CAAlB,EAA2B;AACvBQ,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACH;;AAED,MAAIJ,eAAe,KAAK,EAAxB,EAA4B;AACxBI,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACA;AACH;;AAED,MAAIH,WAAW,KAAK,EAApB,EAAwB;AACpBG,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACH;;AAED,MAAIH,WAAW,KAAKC,eAApB,EAAqC;AACjCE,IAAAA,KAAK,CAAC,iDAAD,CAAL;AACA;AACH,GAzBoB,CA2BrB;AACA;AACA;;;AACAC,EAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFmC;AAK5CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,MAAAA,KAAK,EAAEA,KAAT;AAAgBI,MAAAA,eAAe,EAAEA,eAAjC;AAAkDC,MAAAA,WAAW,EAAEA;AAA/D,KAAf;AALsC,GAA3C,CAAL,CAOCU,IAPD,CAOM,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAPd,EAQCF,IARD,CAQM,UAAAG,IAAI,EAAI;AACV;AACA;AACA,QAAIA,IAAI,CAACC,OAAT,EAAkB;AACdX,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH,KAFD,MAEO;AACHA,MAAAA,KAAK,CAAC,8EAAD,CAAL;AACH;AACJ,GAhBD,WAiBO,UAAAY,KAAK,EAAI;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAZ,IAAAA,KAAK,CAAC,4CAAD,CAAL;AACH,GApBD;AAqBH;;AAED,SAASD,aAAT,CAAuBP,KAAvB,EAA8B;AAC1B;AACA,MAAMsB,UAAU,GAAG,4BAAnB;AACA,SAAOA,UAAU,CAACC,IAAX,CAAgBvB,KAAhB,CAAP;AACH","sourcesContent":["function resetPassword() {\r\n    const email = document.getElementById('email').value;\r\n    const currentPassword = document.getElementById('currentPassword').value;\r\n    const newPassword = document.getElementById('newPassword').value;\r\n    const confirmPassword = document.getElementById('confirmPassword').value;\r\n\r\n    // Validate email and passwords (you can add more validation if needed)\r\n    if (!validateEmail(email)) {\r\n        alert('Please enter a valid email address.');\r\n        return;\r\n    }\r\n\r\n    if (currentPassword === '') {\r\n        alert('Please enter your current password.');\r\n        return;\r\n    }\r\n\r\n    if (newPassword === '') {\r\n        alert('Please enter a new password.');\r\n        return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n        alert('New password and confirm password do not match.');\r\n        return;\r\n    }\r\n\r\n    // Send the email address, current password, and new password to the server for password reset process\r\n    // Replace 'your-server-change-password-script.php' with the actual server-side script URL\r\n    // You can use Ajax or fetch API to send the data to the server\r\n    fetch('your-server-change-password-script.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: email, currentPassword: currentPassword, newPassword: newPassword }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        // Handle the response from the server\r\n        // For example, show a success message or an error message based on the server response\r\n        if (data.success) {\r\n            alert('Password changed successfully.');\r\n        } else {\r\n            alert('Failed to change password. Please check your current password and try again.');\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n        alert('An error occurred. Please try again later.');\r\n    });\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    // Simple email validation using regular expression\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n}"],"file":"resetpass.dev.js"}